[CreateFileA]
Lib = kernel32.dll
Call = stdcall
Return = DWord handle
Prologue = 8

: lpFileName fn = PChar
: dwDesiredAccess access = DWord flags =
  set of GENERIC_READ GENERIC_WRITE
: dwShareMode share = DWord flags =
  set of FILE_SHARE_READ FILE_SHARE_WRITE FILE_SHARE_DELETE
: lpSecurityAttributes security = Pointer PSecurityAttributes
: dwCreationDistribution distribution distrib = DWord enum =
  CREATE_NEW CREATE_ALWAYS OPEN_EXISTING OPEN_ALWAYS TRUNCATE_EXISTING
: dwFlagsAndAttributes flags = DWord flags =
  set of FILE_ATTRIBUTE_READONLY FILE_ATTRIBUTE_HIDDEN FILE_ATTRIBUTE_SYSTEM FILE_ATTRIBUTE_DIRECTORY FILE_ATTRIBUTE_ARCHIVE FILE_ATTRIBUTE_NORMAL FILE_ATTRIBUTE_TEMPORARY FILE_ATTRIBUTE_COMPRESSED FILE_ATTRIBUTE_OFFLINE
: hTemplateFile template = DWord handle

[CreateFileW]
Lib = kernel32.dll
Call = stdcall
Return = DWord handle
Prologue = 8

: lpFileName fn = PWideChar
: dwDesiredAccess access = DWord flags =
  set of GENERIC_READ GENERIC_WRITE
: dwShareMode share = DWord flags =
  set of FILE_SHARE_READ FILE_SHARE_WRITE FILE_SHARE_DELETE
: lpSecurityAttributes security = Pointer PSecurityAttributes
: dwCreationDistribution distribution distrib = DWord enum =
  CREATE_NEW CREATE_ALWAYS OPEN_EXISTING OPEN_ALWAYS TRUNCATE_EXISTING
: dwFlagsAndAttributes flags = DWord flags =
  set of FILE_ATTRIBUTE_READONLY FILE_ATTRIBUTE_HIDDEN FILE_ATTRIBUTE_SYSTEM FILE_ATTRIBUTE_DIRECTORY FILE_ATTRIBUTE_ARCHIVE FILE_ATTRIBUTE_NORMAL FILE_ATTRIBUTE_TEMPORARY FILE_ATTRIBUTE_COMPRESSED FILE_ATTRIBUTE_OFFLINE
: hTemplateFile template = DWord handle

[ReadFile]
Lib = kernel32.dll
Call = stdcall
Return = Bool
Prologue = 7

: hFile f h handle = DWord handle
: lpBuffer buf = Pointer out
: nNumberOfBytesToRead size = DWord
: lpNumberOfBytesRead read = Pointer out DWord
: lpOverlapped overlapped = Pointer POverlapped

[WriteFile]
Lib = kernel32.dll
Call = stdcall
Return = Bool
Prologue = 7

: hFile f h handle = DWord handle
: lpBuffer buf = Pointer
: nNumberOfBytesToWrite size = DWord
: lpNumberOfBytesWritten written = Pointer out DWord
: lpOverlapped overlapped = Pointer POverlapped

[SetFilePointer]
Lib = kernel32.dll
Call = stdcall
Return = DWord
Prologue = 8

: hFile f h handle = DWord handle
: lDistanceToMove pos = Integer
: lpDistanceToMoveHigh high = Pointer PInteger
: dwMoveMethod method origin = DWord =
  FILE_BEGIN FILE_CURRENT FILE_END

[RegOpenKeyA]
Lib = advapi32.dll
Call = stdcall
Return = Integer
Prologue = 8

: hKey key = DWord HKEY =
  HKEY_CLASSES_ROOT HKEY_CURRENT_USER HKEY_LOCAL_MACHINE HKEY_USERS HKEY_PERFORMANCE_DATA HKEY_CURRENT_CONFIG HKEY_DYN_DATA
: lpSubKey subkey sub = PChar
: phkResult result res handle h = Pointer PHKEY

[RegOpenKeyW]
Lib = advapi32.dll
Call = stdcall
Return = Integer
Prologue = 8

: hKey key = DWord HKEY =
  HKEY_CLASSES_ROOT HKEY_CURRENT_USER HKEY_LOCAL_MACHINE HKEY_USERS HKEY_PERFORMANCE_DATA HKEY_CURRENT_CONFIG HKEY_DYN_DATA
: lpSubKey subkey sub = PWideChar
: phkResult result res handle h = Pointer PHKEY
